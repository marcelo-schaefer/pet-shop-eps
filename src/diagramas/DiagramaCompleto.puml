@startuml
class br.com.pet_shop.servicos.ConsultaServico {
- ConsultaRepositorio consultaRepositorio
+ <<Create>> ConsultaServico(ConsultaRepositorio)
+ Consulta criar()
+ Consulta atualizar()
+ Consulta buscarPorId()
+ Boolean deletarPorId()
}
class br.com.pet_shop.utilitarios.constantes.sql.AnimalSqlConstante {
+ {static} String CRIAR
+ {static} String ATUALIZAR
+ {static} String INATIVAR
+ {static} String DELETAR
+ {static} String DELETAR_POR_ID
+ {static} String BUSCAR
+ {static} String BUSCAR_POR_ID
- <<Create>> AnimalSqlConstante()
}
class br.com.pet_shop.entidades.Pessoa {
- Integer id
- String nome
- String cpf
- Date dataNascimento
+ <<Create>> Pessoa()
+ <<Create>> Pessoa(Integer)
+ <<Create>> Pessoa(String,String,Date)
+ <<Create>> Pessoa(Integer,String,String,Date)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
+ String getCpf()
+ void setCpf(String)
+ Date getDataNascimento()
+ void setDataNascimento(Date)
}
class br.com.pet_shop.excecoes.ConexaoBancoExcecao {
+ <<Create>> ConexaoBancoExcecao(Throwable)
+ <<Create>> ConexaoBancoExcecao(String,Throwable)
}
class br.com.pet_shop.tela.menu.MenuTela {
- <<Create>> MenuTela()
+ {static} void menuPrincipal()
- {static} void menuCliente()
- {static} void menuEspecie()
- {static} void menuAnimal()
- {static} void menuConsulta()
- {static} void menuCrud(String,Runnable,Runnable,Runnable,Runnable)
}
class br.com.pet_shop.tela.entidades.ClienteTela {
- {static} String CADASTRAR_CLIENTE_TITULO
- {static} String ATUALIZAR_CLIENTE_TITULO
- {static} String BUSCAR_CLIENTE_TITULO
- {static} String DELETAR_CLIENTE_TITULO
- <<Create>> ClienteTela()
+ {static} Cliente criar()
+ {static} Cliente atualizar()
+ {static} Cliente buscar()
+ {static} Cliente deletar()
}
interface br.com.pet_shop.servicos.interfaces.ServicoInterface {
~ T criar()
~ T atualizar()
~ T buscarPorId()
~ Boolean deletarPorId()
}
class br.com.pet_shop.tela.entidades.ConsultaTela {
- {static} String CADASTRAR_CONSULTA_TITULO
- {static} String ATUALIZAR_CONSULTA_TITULO
- {static} String BUSCAR_CONSULTA_TITULO
- {static} String DELETAR_CONSULTA_TITULO
- <<Create>> ConsultaTela()
+ {static} Consulta criar()
+ {static} Consulta atualizar()
+ {static} Consulta buscar()
+ {static} Consulta deletar()
}
class br.com.pet_shop.excecoes.PersistirEntidadeExcecao {
+ <<Create>> PersistirEntidadeExcecao()
+ <<Create>> PersistirEntidadeExcecao(String)
+ <<Create>> PersistirEntidadeExcecao(String,Throwable)
}
class br.com.pet_shop.utilitarios.constantes.sql.FuncionarioSqlConstante {
+ {static} String CRIAR
+ {static} String ATUALIZAR
+ {static} String INATIVAR
+ {static} String BUSCAR
+ {static} String BUSCAR_POR_ID
+ {static} String DELETAR
+ {static} String DELETAR_POR_ID
- <<Create>> FuncionarioSqlConstante()
}
class br.com.pet_shop.servicos.FuncionarioServico {
- FuncionarioRepositorio medicoRepositorio
+ <<Create>> FuncionarioServico(FuncionarioRepositorio)
+ Funcionario criar()
+ Funcionario atualizar()
+ Funcionario buscarPorId()
+ Boolean deletarPorId()
}
class br.com.pet_shop.utilitarios.conversores.ConversorEntidade {
- <<Create>> ConversorEntidade()
+ {static} Cliente resultSetParaCliente(ResultSet)
+ {static} Consulta resultSetParaConsulta(ResultSet)
+ {static} Animal resultSetParaAnimal(ResultSet)
}
class br.com.pet_shop.servicos.EspecieServico {
- EspecieRepositorio especieRepositorio
+ <<Create>> EspecieServico(EspecieRepositorio)
+ Especie criar()
+ Especie atualizar()
+ Especie buscarPorId()
+ Boolean deletarPorId()
}
class br.com.pet_shop.utilitarios.constantes.sql.ConsultaSqlConstante {
+ {static} String CRIAR
+ {static} String ATUALIZAR
+ {static} String INATIVAR
+ {static} String BUSCAR
+ {static} String BUSCAR_POR_ID
+ {static} String DELETAR
+ {static} String DELETAR_POR_ID
- <<Create>> ConsultaSqlConstante()
}
class br.com.pet_shop.tela.dados.JOptionPaneTela {
- <<Create>> JOptionPaneTela()
+ {static} Object optionInputPergunta(String,String)
+ {static} Integer optionConfirmPergunta(String,String)
+ {static} void optionMensagemAlerta(String,String)
+ {static} void optionMensagemInfo(String,String)
}
class br.com.pet_shop.repositorio.EspecieRepositorio {
+ Boolean criar(Especie)
+ Boolean atualizar(Especie)
+ Optional<Especie> buscarPorId(Integer)
+ Especie buscarUltimo()
+ List<Especie> buscarTodos()
+ Boolean deletarTodos()
+ Boolean deletarPorId(Integer)
+ Boolean existePorID(Integer)
}
class br.com.pet_shop.utilitarios.constantes.mensagens.ClienteMensagem {
+ {static} String NAO_ENCONTRADO
- <<Create>> ClienteMensagem()
}
class br.com.pet_shop.tela.dados.LerTela {
- <<Create>> LerTela()
+ {static} String lerString(String,String)
+ {static} Double lerDouble(String,String)
+ {static} Integer lerInteger(String,String)
+ {static} Boolean lerBoolean(String,String)
+ {static} Date lerDate(String,String)
}
class br.com.pet_shop.utilitarios.constantes.sql.ClienteSqlConstante {
+ {static} String CRIAR
+ {static} String ATUALIZAR
+ {static} String INATIVAR
+ {static} String BUSCAR
+ {static} String BUSCAR_POR_ID
+ {static} String DELETAR
+ {static} String DELETAR_POR_ID
- <<Create>> ClienteSqlConstante()
}
class br.com.pet_shop.repositorio.ClienteRepositorio {
+ Boolean criar(Cliente)
+ Boolean atualizar(Cliente)
+ Optional<Cliente> buscarPorId(Integer)
+ Cliente buscarUltimo()
+ List<Cliente> buscarTodos()
+ Boolean deletarTodos()
+ Boolean deletarPorId(Integer)
+ Boolean existePorID(Integer)
}
class br.com.pet_shop.repositorio.AnimalRepositorio {
+ Boolean criar(Animal)
+ Boolean atualizar(Animal)
+ Optional<Animal> buscarPorId(Integer)
+ Animal buscarUltimo()
+ List<Animal> buscarTodos()
+ Boolean deletarTodos()
+ Boolean deletarPorId(Integer)
+ Boolean existePorID(Integer)
}
class br.com.pet_shop.excecoes.ManipulacaoBancoExcecao {
+ <<Create>> ManipulacaoBancoExcecao(String)
+ <<Create>> ManipulacaoBancoExcecao(Throwable)
+ <<Create>> ManipulacaoBancoExcecao(String,Throwable)
}
interface br.com.pet_shop.servicos.interfaces.ConsultaServicoInterface {
}
class br.com.pet_shop.repositorio.FuncionarioRepositorio {
+ Boolean criar(Funcionario)
+ Boolean atualizar(Funcionario)
+ Optional<Funcionario> buscarPorId(Integer)
+ Funcionario buscarUltimo()
+ List<Funcionario> buscarTodos()
+ Boolean deletarPorId(Integer)
+ Boolean deletarTodos()
+ Boolean existePorID(Integer)
}
class br.com.pet_shop.excecoes.ConverterTipoExcecao {
+ <<Create>> ConverterTipoExcecao(String,Throwable)
}
class br.com.pet_shop.tela.entidades.EspecieTela {
- {static} String CADASTRAR_ESPECIE_TITULO
- {static} String ATUALIZAR_ESPECIE_TITULO
- {static} String BUSCAR_ESPECIE_TITULO
- {static} String DELETAR_ESPECIE_TITULO
- <<Create>> EspecieTela()
+ {static} Especie criar()
+ {static} Especie atualizar()
+ {static} Especie buscar()
+ {static} Especie deletar()
}
class br.com.pet_shop.tela.entidades.MedicoTela {
- {static} String CADASTRAR_MEDICO_TITULO
- {static} String ATUALIZAR_MEDICO_TITULO
- {static} String BUSCAR_MEDICO_TITULO
- {static} String DELETAR_MEDICO_TITULO
- <<Create>> MedicoTela()
+ {static} Funcionario criar()
+ {static} Funcionario atualizar()
+ {static} Funcionario buscar()
+ {static} Funcionario deletar()
}
class br.com.pet_shop.repositorio.ConsultaRepositorio {
+ Boolean criar(Consulta)
+ Boolean atualizar(Consulta)
+ Optional<Consulta> buscarPorId(Integer)
+ Consulta buscarUltimo()
+ List<Consulta> buscarTodos()
+ Boolean deletarTodos()
+ Boolean deletarPorId(Integer)
+ Boolean existePorID(Integer)
}
interface br.com.pet_shop.servicos.interfaces.ClienteServicoInterface {
}
enum br.com.pet_shop.enums.EspecieEnum {
+  CACHORRO
+  GATO
+  COBRA
+  PAPAGAIO
+ {static} EspecieEnum pegarPorOpcao(Integer)
}
class br.com.pet_shop.servicos.AnimalServico {
- AnimalRepositorio animalRepositorio
+ <<Create>> AnimalServico(AnimalRepositorio)
+ Animal criar()
+ Animal atualizar()
+ Animal buscarPorId()
+ Boolean deletarPorId()
}
interface br.com.pet_shop.servicos.interfaces.AnimalServicoInterface {
}
class br.com.pet_shop.utilitarios.constantes.mensagens.ConsultaMensagem {
+ {static} String NAO_ENCONTRADO
- <<Create>> ConsultaMensagem()
}
class br.com.pet_shop.utilitarios.constantes.mensagens.EspecieMensagem {
+ {static} String NAO_ENCONTRADO
- <<Create>> EspecieMensagem()
}
class br.com.pet_shop.utilitarios.constantes.mensagens.AnimalMensagem {
+ {static} String NAO_ENCONTRADO
- <<Create>> AnimalMensagem()
}
class br.com.pet_shop.entidades.Especie {
- Integer id
- String nome
+ <<Create>> Especie()
+ <<Create>> Especie(Integer)
+ <<Create>> Especie(String)
+ <<Create>> Especie(Integer,String)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
}
abstract class br.com.pet_shop.repositorio.RepositorioAbstract {
~ {abstract}Boolean criar(T)
~ {abstract}Boolean atualizar(T)
~ {abstract}Optional<T> buscarPorId(Integer)
~ {abstract}T buscarUltimo()
~ {abstract}List<T> buscarTodos()
~ {abstract}Boolean deletarPorId(Integer)
~ {abstract}Boolean deletarTodos()
~ {abstract}Boolean existePorID(Integer)
# Connection conectarBanco()
}
class br.com.pet_shop.entidades.Animal {
- Integer id
- String nome
- String detalhe
- Date dataNascimento
- SexoEnum sexo
- Boolean ativo
- Especie especie
+ <<Create>> Animal()
+ <<Create>> Animal(Integer)
+ <<Create>> Animal(String,String,Date,SexoEnum,Boolean,Especie)
+ <<Create>> Animal(Integer,String,String,Date,SexoEnum,Boolean,Especie)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
+ String getDetalhe()
+ void setDetalhe(String)
+ Date getDataNascimento()
+ void setDataNascimento(Date)
+ SexoEnum getSexo()
+ void setSexo(SexoEnum)
+ Boolean getAtivo()
+ void setAtivo(Boolean)
+ Especie getEspecie()
+ void setEspecie(Especie)
}
enum br.com.pet_shop.enums.SexoEnum {
+  FEMININO
+  MASCULINO
+  HEMAFRODITA
+ {static} SexoEnum pegarPorOpcao(Integer)
}
class br.com.pet_shop.servicos.ClienteServico {
- ClienteRepositorio clienteRepositorio
+ <<Create>> ClienteServico(ClienteRepositorio)
+ Cliente criar()
+ Cliente atualizar()
+ Cliente buscarPorId()
+ Boolean deletarPorId()
}
class br.com.pet_shop.banco.ConexaoBanco {
- {static} Connection conexao
- <<Create>> ConexaoBanco()
+ {static} Connection pegarConexao()
}
class br.com.pet_shop.utilitarios.conversores.ConversorTipos {
- <<Create>> ConversorTipos()
+ {static} Date stringParaDate(String)
+ {static} String dateParaString(Date)
+ {static} java.sql.Date dateParaDateSql(Date)
}
class br.com.pet_shop.excecoes.ConverterResultSetExcecao {
+ <<Create>> ConverterResultSetExcecao(String,Throwable)
}
class br.com.pet_shop.excecoes.EntidadeNaoEncontrada {
+ <<Create>> EntidadeNaoEncontrada(String)
+ <<Create>> EntidadeNaoEncontrada(String,Throwable)
}
class br.com.pet_shop.RunApp {
+ {static} void main(String[])
}
interface br.com.pet_shop.servicos.interfaces.MedicoServicoInterface {
}
class br.com.pet_shop.tela.entidades.AnimalTela {
- {static} String CADASTRAR_ANIMAL_TITULO
- {static} String ATUALIZAR_ANIMAL_TITULO
- {static} String BUSCAR_ANIMAL_TITULO
- {static} String DELETAR_ANIMAL_TITULO
- <<Create>> AnimalTela()
+ {static} Animal criar()
+ {static} Animal atualizar()
+ {static} Animal buscar()
+ {static} Animal deletar()
}
class br.com.pet_shop.entidades.Consulta {
- Integer id
- String nome
- String observacao
- Date horario
- Cliente cliente
- Animal animal
- Double valor
+ <<Create>> Consulta()
+ <<Create>> Consulta(Integer)
+ <<Create>> Consulta(String,String,Date,Cliente,Animal,Double)
+ <<Create>> Consulta(Integer,String,String,Date,Cliente,Animal,Double)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
+ String getObservacao()
+ void setObservacao(String)
+ Date getHorario()
+ void setHorario(Date)
+ Cliente getCliente()
+ void setCliente(Cliente)
+ Animal getAnimais()
+ void setAnimais(Animal)
+ Double getValor()
+ void setValor(Double)
}
class br.com.pet_shop.utilitarios.constantes.sql.EspecieSqlConstante {
+ {static} String CRIAR
+ {static} String ATUALIZAR
+ {static} String DELETAR
+ {static} String DELETAR_POR_ID
+ {static} String BUSCAR
+ {static} String BUSCAR_POR_ID
- <<Create>> EspecieSqlConstante()
}
class br.com.pet_shop.entidades.Cliente {
- List<Animal> animais
- List<Consulta> historicoConsultas
+ <<Create>> Cliente()
+ <<Create>> Cliente(Integer)
+ <<Create>> Cliente(String,String,Date)
+ <<Create>> Cliente(Integer,String,String,Date)
+ <<Create>> Cliente(Integer,String,String,Date,List<Animal>,List<Consulta>)
+ List<Animal> getAnimais()
+ void setAnimais(List<Animal>)
+ List<Consulta> getHistoricoConsultas()
+ void setHistoricoConsultas(List<Consulta>)
}
class br.com.pet_shop.entidades.Funcionario {
- String cargo
+ <<Create>> Funcionario(Integer)
+ <<Create>> Funcionario(String)
+ <<Create>> Funcionario(Integer,String)
+ <<Create>> Funcionario(String,String,Date)
+ <<Create>> Funcionario(String,String,Date,String)
+ <<Create>> Funcionario(Integer,String,String,Date)
+ <<Create>> Funcionario(Integer,String,String,Date,String)
+ String getCargo()
+ void setCargo(String)
}
class br.com.pet_shop.tela.dados.LerEnumTela {
- <<Create>> LerEnumTela()
+ {static} CargoEnum lerCargoEnum(String)
+ {static} SexoEnum lerSexoEnum(String)
+ {static} EspecieEnum lerEspecieEnum(String)
- {static} Integer lerOpcao(Integer,String,String)
}
interface br.com.pet_shop.servicos.interfaces.EspecieServicoInterface {
}


br.com.pet_shop.servicos.interfaces.ConsultaServicoInterface <|.. br.com.pet_shop.servicos.ConsultaServico
br.com.pet_shop.excecoes.RuntimeException <|-- br.com.pet_shop.excecoes.ConexaoBancoExcecao
br.com.pet_shop.excecoes.RuntimeException <|-- br.com.pet_shop.excecoes.PersistirEntidadeExcecao
br.com.pet_shop.servicos.interfaces.MedicoServicoInterface <|.. br.com.pet_shop.servicos.FuncionarioServico
br.com.pet_shop.servicos.interfaces.EspecieServicoInterface <|.. br.com.pet_shop.servicos.EspecieServico
br.com.pet_shop.repositorio.RepositorioAbstract <|-- br.com.pet_shop.repositorio.EspecieRepositorio
br.com.pet_shop.repositorio.RepositorioAbstract <|-- br.com.pet_shop.repositorio.ClienteRepositorio
br.com.pet_shop.repositorio.RepositorioAbstract <|-- br.com.pet_shop.repositorio.AnimalRepositorio
br.com.pet_shop.excecoes.RuntimeException <|-- br.com.pet_shop.excecoes.ManipulacaoBancoExcecao
br.com.pet_shop.servicos.interfaces.ServicoInterface <|-- br.com.pet_shop.servicos.interfaces.ConsultaServicoInterface
br.com.pet_shop.repositorio.RepositorioAbstract <|-- br.com.pet_shop.repositorio.FuncionarioRepositorio
br.com.pet_shop.excecoes.RuntimeException <|-- br.com.pet_shop.excecoes.ConverterTipoExcecao
br.com.pet_shop.repositorio.RepositorioAbstract <|-- br.com.pet_shop.repositorio.ConsultaRepositorio
br.com.pet_shop.servicos.interfaces.ServicoInterface <|-- br.com.pet_shop.servicos.interfaces.ClienteServicoInterface
br.com.pet_shop.servicos.interfaces.AnimalServicoInterface <|.. br.com.pet_shop.servicos.AnimalServico
br.com.pet_shop.servicos.interfaces.ServicoInterface <|-- br.com.pet_shop.servicos.interfaces.AnimalServicoInterface
br.com.pet_shop.servicos.interfaces.ClienteServicoInterface <|.. br.com.pet_shop.servicos.ClienteServico
br.com.pet_shop.excecoes.RuntimeException <|-- br.com.pet_shop.excecoes.ConverterResultSetExcecao
br.com.pet_shop.excecoes.RuntimeException <|-- br.com.pet_shop.excecoes.EntidadeNaoEncontrada
br.com.pet_shop.servicos.interfaces.ServicoInterface <|-- br.com.pet_shop.servicos.interfaces.MedicoServicoInterface
br.com.pet_shop.entidades.Pessoa <|-- br.com.pet_shop.entidades.Cliente
br.com.pet_shop.entidades.Pessoa <|-- br.com.pet_shop.entidades.Funcionario
br.com.pet_shop.servicos.interfaces.ServicoInterface <|-- br.com.pet_shop.servicos.interfaces.EspecieServicoInterface
@enduml