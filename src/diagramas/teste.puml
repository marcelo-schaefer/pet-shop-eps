@startuml
interface br.com.br.com.pet_shop.repositorio.interfaces.ConsultaRepositorioInterface {
}
interface br.com.br.com.pet_shop.repositorio.interfaces.ClienteRepositorioInterface {
}
class br.com.br.com.pet_shop.tela.dados.JOptionPaneTela {
- <<Create>> JOptionPaneTela()
+ {static} Object optionInputPergunta(String,String)
+ {static} Integer optionConfirmPergunta(String,String)
+ {static} void optionMensagemAlerta(String,String)
}
enum br.com.br.com.pet_shop.enums.CargoEnum {
+  ATENDENTE
+  MEDICO
+ {static} CargoEnum pegarPorOpcao(Integer)
}
class br.com.br.com.pet_shop.entidades.Consulta {
- Integer id
- String nome
- String observacao
- Date horario
- Cliente cliente
- List<Animal> animais
- Double valor
+ <<Create>> Consulta()
+ <<Create>> Consulta(Integer)
+ <<Create>> Consulta(Integer,String,String,Date,Cliente,List<Animal>,Double)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
+ String getObservacao()
+ void setObservacao(String)
+ Date getHorario()
+ void setHorario(Date)
+ Cliente getCliente()
+ void setCliente(Cliente)
+ List<Animal> getAnimais()
+ void setAnimais(List<Animal>)
+ Double getValor()
+ void setValor(Double)
}
class br.com.br.com.pet_shop.entidades.Funcionario {
- CargoEnum cargo
+ <<Create>> Funcionario()
+ <<Create>> Funcionario(Integer)
+ <<Create>> Funcionario(Integer,String,String,Date,CargoEnum)
+ CargoEnum getCargo()
+ void setCargo(CargoEnum)
}
class br.com.br.com.pet_shop.excecoes.ConexaoBancoExcecao {
+ <<Create>> ConexaoBancoExcecao(Throwable)
+ <<Create>> ConexaoBancoExcecao(String,Throwable)
}
enum br.com.br.com.pet_shop.enums.SexoEnum {
+  FEMININO
+  MASCULINO
+  HEMAFRODITA
+ {static} SexoEnum pegarPorOpcao(Integer)
}
class br.com.br.com.pet_shop.repositorio.ClienteRepositorio {
+ Boolean criar(Cliente)
+ Boolean atualizar(Cliente)
+ Optional<Cliente> buscarPorId(Integer)
+ List<Cliente> buscar()
+ Boolean deletar()
+ Boolean deletarPorId(Integer)
}
interface br.com.br.com.pet_shop.repositorio.interfaces.AnimalRepositorioInterface {
}
class br.com.br.com.pet_shop.entidades.Pessoa {
- Integer id
- String nome
- String cpf
- Date dataNascimento
+ <<Create>> Pessoa()
+ <<Create>> Pessoa(Integer)
+ <<Create>> Pessoa(String,String,Date)
+ <<Create>> Pessoa(Integer,String,String,Date)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
+ String getCpf()
+ void setCpf(String)
+ Date getDataNascimento()
+ void setDataNascimento(Date)
}
class br.com.br.com.pet_shop.repositorio.ConsultaRepositorio {
+ Boolean criar(Consulta)
+ Boolean atualizar(Consulta)
+ Optional<Consulta> buscarPorId(Integer)
+ List<Consulta> buscar()
+ Boolean deletar()
+ Boolean deletarPorId(Integer)
}
class br.com.br.com.pet_shop.excecoes.ConverterTipoExcecao {
+ <<Create>> ConverterTipoExcecao(String,Throwable)
}
class br.com.br.com.pet_shop.excecoes.ConverterResultSetExcecao {
+ <<Create>> ConverterResultSetExcecao(String,Throwable)
}
class br.com.br.com.pet_shop.repositorio.AnimalRepositorio {
+ Boolean criar(Animal)
+ Boolean atualizar(Animal)
+ Optional<Animal> buscarPorId(Integer)
+ List<Animal> buscar()
+ Boolean deletar()
+ Boolean deletarPorId(Integer)
}
enum br.com.br.com.pet_shop.enums.EspecieEnum {
+  CACHORRO
+  GATO
+  COBRA
+  PAPAGAIO
+ {static} EspecieEnum pegarPorOpcao(Integer)
}
class br.com.br.com.pet_shop.excecoes.ManipulacaoBancoExcecao {
+ <<Create>> ManipulacaoBancoExcecao(String)
+ <<Create>> ManipulacaoBancoExcecao(Throwable)
+ <<Create>> ManipulacaoBancoExcecao(String,Throwable)
}
class br.com.br.com.pet_shop.entidades.Animal {
- Integer id
- String nome
- Date dataNascimento
- SexoEnum sexo
- Boolean ativo
+ <<Create>> Animal()
+ <<Create>> Animal(Integer)
+ <<Create>> Animal(Integer,String,Date,SexoEnum,Boolean)
+ Integer getId()
+ void setId(Integer)
+ String getNome()
+ void setNome(String)
+ Date getDataNascimento()
+ void setDataNascimento(Date)
+ SexoEnum getSexo()
+ void setSexo(SexoEnum)
+ Boolean getAtivo()
+ void setAtivo(Boolean)
}
class br.com.br.com.pet_shop.repositorio.PessoaRepositorio {
+ Boolean criar(Pessoa)
+ Boolean atualizar(Pessoa)
+ Optional<Pessoa> buscarPorId(Integer)
+ List<Pessoa> buscar()
+ Boolean deletar()
+ Boolean deletarPorId(Integer)
}
class br.com.br.com.pet_shop.tela.dados.LerEnumTela {
- <<Create>> LerEnumTela()
+ {static} CargoEnum lerCargoEnum(String)
+ {static} SexoEnum lerSexoEnum(String)
+ {static} EspecieEnum lerEspecieEnum(String)
- {static} Integer lerOpcao(Integer,String,String)
}
class br.com.br.com.pet_shop.RunApp {
+ {static} void main(String[])
}
class br.com.br.com.pet_shop.tela.dados.LerTela {
- <<Create>> LerTela()
+ {static} String lerString(String,String)
+ {static} Double lerDouble(String,String)
+ {static} Integer lerInteger(String,String)
+ {static} Boolean lerBoolean(String,String)
+ {static} Date lerDate(String,String)
}
class br.com.br.com.pet_shop.banco.ConexaoBanco {
- {static} Connection conexao
- <<Create>> ConexaoBanco()
+ {static} Connection pegarConexao()
}
class br.com.br.com.pet_shop.tela.ClienteTela {
- {static} String CADASTRAR_CLIENTE_TITULO
- {static} String ATUALIZAR_CLIENTE_TITULO
- {static} String DELETAR_CLIENTE_TITULO
- <<Create>> ClienteTela()
+ {static} Cliente criar()
+ {static} Cliente atualizar()
+ {static} Cliente deletar()
}
class br.com.br.com.pet_shop.entidades.Cliente {
- List<Animal> animais
- List<Consulta> historicoConsultas
+ <<Create>> Cliente()
+ <<Create>> Cliente(Integer)
+ <<Create>> Cliente(Integer,String,String,Date)
+ <<Create>> Cliente(String,String,Date)
+ <<Create>> Cliente(Integer,String,String,Date,List<Animal>,List<Consulta>)
+ List<Animal> getAnimais()
+ void setAnimais(List<Animal>)
+ List<Consulta> getHistoricoConsultas()
+ void setHistoricoConsultas(List<Consulta>)
+ String toString()
}
interface br.com.br.com.pet_shop.repositorio.interfaces.RepositorioInterface {
~ Boolean criar(T)
~ Boolean atualizar(T)
~ Optional<T> buscarPorId(Integer)
~ List<T> buscar()
~ Boolean deletar()
~ Boolean deletarPorId(Integer)
}
interface br.com.br.com.pet_shop.repositorio.interfaces.PessoaRepositorioInterface {
}


br.com.br.com.pet_shop.repositorio.interfaces.RepositorioInterface <|-- br.com.br.com.pet_shop.repositorio.interfaces.ConsultaRepositorioInterface
br.com.br.com.pet_shop.repositorio.interfaces.RepositorioInterface <|-- br.com.br.com.pet_shop.repositorio.interfaces.ClienteRepositorioInterface
br.com.br.com.pet_shop.entidades.Pessoa <|-- br.com.br.com.pet_shop.entidades.Funcionario
br.com.br.com.pet_shop.excecoes.RuntimeException <|-- br.com.br.com.pet_shop.excecoes.ConexaoBancoExcecao
br.com.br.com.pet_shop.repositorio.interfaces.ClienteRepositorioInterface <|.. br.com.br.com.pet_shop.repositorio.ClienteRepositorio
br.com.br.com.pet_shop.repositorio.interfaces.RepositorioInterface <|-- br.com.br.com.pet_shop.repositorio.interfaces.AnimalRepositorioInterface
br.com.br.com.pet_shop.repositorio.interfaces.ConsultaRepositorioInterface <|.. br.com.br.com.pet_shop.repositorio.ConsultaRepositorio
br.com.br.com.pet_shop.excecoes.RuntimeException <|-- br.com.br.com.pet_shop.excecoes.ConverterTipoExcecao
br.com.br.com.pet_shop.excecoes.RuntimeException <|-- br.com.br.com.pet_shop.excecoes.ConverterResultSetExcecao
br.com.br.com.pet_shop.repositorio.interfaces.AnimalRepositorioInterface <|.. br.com.br.com.pet_shop.repositorio.AnimalRepositorio
br.com.br.com.pet_shop.excecoes.RuntimeException <|-- br.com.br.com.pet_shop.excecoes.ManipulacaoBancoExcecao
br.com.br.com.pet_shop.repositorio.interfaces.PessoaRepositorioInterface <|.. br.com.br.com.pet_shop.repositorio.PessoaRepositorio
br.com.br.com.pet_shop.entidades.Pessoa <|-- br.com.br.com.pet_shop.entidades.Cliente
br.com.br.com.pet_shop.repositorio.interfaces.RepositorioInterface <|-- br.com.br.com.pet_shop.repositorio.interfaces.PessoaRepositorioInterface
@enduml